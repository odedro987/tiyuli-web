/**
 * Generated by the protoc-gen-ts.  DO NOT EDIT!
 * compiler version: 5.28.2
 * source: expense.proto
 * git: https://github.com/thesayyn/protoc-gen-ts */
import * as dependency_1 from "./google\\protobuf\\timestamp";
import * as pb_1 from "google-protobuf";
export namespace tiyuli.expense {
    export class Expense extends pb_1.Message {
        #one_of_decls: number[][] = [[4]];
        constructor(data?: any[] | ({
            id?: string;
            user_id?: string;
            name?: string;
            types?: string[];
            payment_date?: dependency_1.google.protobuf.Timestamp;
            currency_code?: string;
            amount?: number;
        } & (({
            note?: string;
        })))) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [5], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("id" in data && data.id != undefined) {
                    this.id = data.id;
                }
                if ("user_id" in data && data.user_id != undefined) {
                    this.user_id = data.user_id;
                }
                if ("name" in data && data.name != undefined) {
                    this.name = data.name;
                }
                if ("note" in data && data.note != undefined) {
                    this.note = data.note;
                }
                if ("types" in data && data.types != undefined) {
                    this.types = data.types;
                }
                if ("payment_date" in data && data.payment_date != undefined) {
                    this.payment_date = data.payment_date;
                }
                if ("currency_code" in data && data.currency_code != undefined) {
                    this.currency_code = data.currency_code;
                }
                if ("amount" in data && data.amount != undefined) {
                    this.amount = data.amount;
                }
            }
        }
        get id() {
            return pb_1.Message.getFieldWithDefault(this, 1, "") as string;
        }
        set id(value: string) {
            pb_1.Message.setField(this, 1, value);
        }
        get user_id() {
            return pb_1.Message.getFieldWithDefault(this, 2, "") as string;
        }
        set user_id(value: string) {
            pb_1.Message.setField(this, 2, value);
        }
        get name() {
            return pb_1.Message.getFieldWithDefault(this, 3, "") as string;
        }
        set name(value: string) {
            pb_1.Message.setField(this, 3, value);
        }
        get note() {
            return pb_1.Message.getFieldWithDefault(this, 4, "") as string;
        }
        set note(value: string) {
            pb_1.Message.setOneofField(this, 4, this.#one_of_decls[0], value);
        }
        get has_note() {
            return pb_1.Message.getField(this, 4) != null;
        }
        get types() {
            return pb_1.Message.getFieldWithDefault(this, 5, []) as string[];
        }
        set types(value: string[]) {
            pb_1.Message.setField(this, 5, value);
        }
        get payment_date() {
            return pb_1.Message.getWrapperField(this, dependency_1.google.protobuf.Timestamp, 6) as dependency_1.google.protobuf.Timestamp;
        }
        set payment_date(value: dependency_1.google.protobuf.Timestamp) {
            pb_1.Message.setWrapperField(this, 6, value);
        }
        get has_payment_date() {
            return pb_1.Message.getField(this, 6) != null;
        }
        get currency_code() {
            return pb_1.Message.getFieldWithDefault(this, 7, "") as string;
        }
        set currency_code(value: string) {
            pb_1.Message.setField(this, 7, value);
        }
        get amount() {
            return pb_1.Message.getFieldWithDefault(this, 8, 0) as number;
        }
        set amount(value: number) {
            pb_1.Message.setField(this, 8, value);
        }
        get _note() {
            const cases: {
                [index: number]: "none" | "note";
            } = {
                0: "none",
                4: "note"
            };
            return cases[pb_1.Message.computeOneofCase(this, [4])];
        }
        static fromObject(data: {
            id?: string;
            user_id?: string;
            name?: string;
            note?: string;
            types?: string[];
            payment_date?: ReturnType<typeof dependency_1.google.protobuf.Timestamp.prototype.toObject>;
            currency_code?: string;
            amount?: number;
        }): Expense {
            const message = new Expense({});
            if (data.id != null) {
                message.id = data.id;
            }
            if (data.user_id != null) {
                message.user_id = data.user_id;
            }
            if (data.name != null) {
                message.name = data.name;
            }
            if (data.note != null) {
                message.note = data.note;
            }
            if (data.types != null) {
                message.types = data.types;
            }
            if (data.payment_date != null) {
                message.payment_date = dependency_1.google.protobuf.Timestamp.fromObject(data.payment_date);
            }
            if (data.currency_code != null) {
                message.currency_code = data.currency_code;
            }
            if (data.amount != null) {
                message.amount = data.amount;
            }
            return message;
        }
        toObject() {
            const data: {
                id?: string;
                user_id?: string;
                name?: string;
                note?: string;
                types?: string[];
                payment_date?: ReturnType<typeof dependency_1.google.protobuf.Timestamp.prototype.toObject>;
                currency_code?: string;
                amount?: number;
            } = {};
            if (this.id != null) {
                data.id = this.id;
            }
            if (this.user_id != null) {
                data.user_id = this.user_id;
            }
            if (this.name != null) {
                data.name = this.name;
            }
            if (this.note != null) {
                data.note = this.note;
            }
            if (this.types != null) {
                data.types = this.types;
            }
            if (this.payment_date != null) {
                data.payment_date = this.payment_date.toObject();
            }
            if (this.currency_code != null) {
                data.currency_code = this.currency_code;
            }
            if (this.amount != null) {
                data.amount = this.amount;
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.id.length)
                writer.writeString(1, this.id);
            if (this.user_id.length)
                writer.writeString(2, this.user_id);
            if (this.name.length)
                writer.writeString(3, this.name);
            if (this.has_note)
                writer.writeString(4, this.note);
            if (this.types.length)
                writer.writeRepeatedString(5, this.types);
            if (this.has_payment_date)
                writer.writeMessage(6, this.payment_date, () => this.payment_date.serialize(writer));
            if (this.currency_code.length)
                writer.writeString(7, this.currency_code);
            if (this.amount != 0)
                writer.writeFloat(8, this.amount);
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): Expense {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new Expense();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.id = reader.readString();
                        break;
                    case 2:
                        message.user_id = reader.readString();
                        break;
                    case 3:
                        message.name = reader.readString();
                        break;
                    case 4:
                        message.note = reader.readString();
                        break;
                    case 5:
                        pb_1.Message.addToRepeatedField(message, 5, reader.readString());
                        break;
                    case 6:
                        reader.readMessage(message.payment_date, () => message.payment_date = dependency_1.google.protobuf.Timestamp.deserialize(reader));
                        break;
                    case 7:
                        message.currency_code = reader.readString();
                        break;
                    case 8:
                        message.amount = reader.readFloat();
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): Expense {
            return Expense.deserialize(bytes);
        }
    }
}
